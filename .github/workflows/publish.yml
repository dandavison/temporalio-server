name: Publish Python Package to PyPI

on:
  release:
    types: [published]

permissions:
  # Needed for uv publish OIDC authentication
  id-token: write

jobs:
  build_and_publish:
    name: Build and publish on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      # Ensure all platforms complete even if one fails
      fail-fast: false
      matrix:
        # Platforms to build native wheels for
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v5

      - name: Verify Git tag matches pyproject.toml version
        run: .github/scripts/check_version.py

      - name: Build distributions (sdist and wheel)
        run: uv build --no-sources -o dist/
        # This runs the hatchling build hook which downloads the correct
        # binary for the *current* runner OS (matrix.os).
        # The resulting wheel will be py3-none-any but contain the native binary.

      - name: Publish distributions to PyPI
        # Publish directly from each build job
        # This avoids complexity of combining artifacts later
        # PyPI handles duplicate uploads gracefully (ignores them)
        run: uv publish dist/*
        # uv will use OIDC via the id-token permission 