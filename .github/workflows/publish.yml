name: Publish Python Package to PyPI

on:
  release:
    types: [published]

permissions:
  # Needed for uv publish OIDC authentication
  id-token: write

jobs:
  build_sdist_and_publish:
    name: Build sdist and publish
    runs-on: ubuntu-latest # sdist is platform-independent
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v5

      # Verify version here too for completeness, though not strictly necessary
      - name: Verify Git tag matches pyproject.toml version
        run: python .github/scripts/check_version.py

      - name: Build source distribution (sdist)
        run: uv build --sdist -o dist/
        # This should NOT trigger the build hook

      - name: Publish sdist to PyPI
        run: uv publish dist/*.tar.gz
        # uv will use OIDC via the id-token permission

  build_wheels_and_publish:
    name: Build wheels and publish on ${{ matrix.os }}
    needs: build_sdist_and_publish # Optional: run after sdist
    runs-on: ${{ matrix.os }}
    strategy:
      # Ensure all platforms complete even if one fails
      fail-fast: false
      matrix:
        # Platforms to build native wheels for
        # TODO: Add back ubuntu-latest with manylinux builds, likely using cibuildwheel
        os: [windows-latest, macos-13, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v5

      # No version check needed here if sdist job does it

      - name: Build wheel distribution
        # No longer needs condition, runs for all OS in matrix
        run: uv build --wheel -o dist/
        # This runs the hatchling build hook which downloads the correct
        # binary for the *current* runner OS (matrix.os).

      - name: Publish wheel to PyPI
        # No longer needs condition, runs for all OS in matrix
        run: uv publish dist/*.whl
        # uv will use OIDC via the id-token permission

      # Removed complex linux/container steps 